CREATE OR REPLACE PROCEDURE copy_table (p_source_scheme IN VARCHAR2,
                         p_target_scheme IN VARCHAR2 DEFAULT USER,
                         p_list_table    IN VARCHAR2,
                         p_copy_data     IN BOOLEAN DEFAULT FALSE,
                         po_result       OUT VARCHAR2
                      ) IS

    v_is_exist_table_target NUMBER;

    BEGIN

    to_log(p_appl_proc => 'copy_table', p_message => 'Копіювання таблиць розпочато');

      <<copy>>
      BEGIN

        FOR cc IN

            (SELECT table_name,
               'CREATE TABLE ' || UPPER(p_target_scheme) ||'.'||table_name||' ('||LISTAGG(column_name ||' '|| data_type||count_symbol,', ')WITHIN GROUP(ORDER BY column_id)||')' AS ddl_code
            FROM (SELECT table_name,
                         column_name,
                         data_type,
                         CASE
                           WHEN data_type = 'VARCHAR2' OR data_type = 'CHAR' THEN '('||data_length||')'
                           WHEN data_type = 'DATE' THEN NULL
                           WHEN data_type = 'NUMBER' THEN replace( '('||data_precision||','||data_scale||')', '(,)', NULL)
                         END AS count_symbol,
                         column_id
                  FROM all_tab_columns
                  WHERE owner = UPPER(p_source_scheme)
                  AND table_name IN(SELECT * FROM TABLE(util.table_from_list(p_list_val => UPPER(p_list_table))))
                  ORDER BY table_name, column_id)
            GROUP BY table_name)

        LOOP

           SELECT COUNT(*)
           INTO v_is_exist_table_target
           FROM all_tab_columns
           WHERE table_name = cc.table_name
           AND owner = UPPER(p_target_scheme);

           IF v_is_exist_table_target > 0 THEN
               to_log(p_appl_proc => 'copy_table', p_message => 'В схемі ' || p_target_scheme || ' таблицю ' || cc.table_name || ' не створено: таблиця вже існує.');
               CONTINUE;
           END IF;

           EXECUTE IMMEDIATE cc.ddl_code;
           to_log(p_appl_proc => 'copy_table', p_message => 'В схемі ' || p_target_scheme || ' створено структуру таблиці ' || p_source_scheme || '.' || cc.table_name);

           IF p_copy_data = TRUE THEN
              EXECUTE IMMEDIATE
              'INSERT INTO ' || UPPER(p_target_scheme) || '.' || cc.table_name ||
              ' SELECT * FROM ' || UPPER(p_source_scheme) || '.' || cc.table_name ;
              COMMIT;
              to_log(p_appl_proc => 'copy_table', p_message => 'В схему ' || p_target_scheme || ' скопійовано дані з таблиці ' || p_source_scheme || '.' || cc.table_name);
           END IF;

         END LOOP;

         EXCEPTION
         WHEN OTHERS THEN
         to_log(p_appl_proc => 'copy_table', p_message => 'Сталася помилка! '||SQLERRM);

       END copy;

     to_log(p_appl_proc => 'copy_table', p_message => 'Копіювання таблиць завершено');

     po_result:= 'Процес копіювання таблиць '||p_list_table||' зі схеми '||p_source_scheme||' до схеми '||p_target_scheme||' завершено. Журнал подій записано в таблицю логування.' ;

     END copy_table;
